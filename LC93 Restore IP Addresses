
class Solution {
    public List<String> restoreIpAddresses(String s) {
        List<String> res = new ArrayList<>();
        if(s == null || s.length() == 0) return res;
        helper(res, s, 0, 0, new StringBuilder());
        return res;
    }
    
    private void helper(List<String> res, String s, int idx, int num, StringBuilder path) {
        if(idx == s.length() && num == 4) {
            path.setLength(path.length()-1);
            res.add(path.toString());
            return;
        }
        if(idx == s.length() || num == 4){
            return;
        }
        
        int len = path.length();
        for(int i=1; i<=3; i++){
            if(idx+i > s.length()) break;
            int val = Integer.valueOf(s.substring(idx, idx+i));
            if(val <= 255) {
                path.append(val+".");
                helper(res, s, idx+i, num+1, path);
                path.setLength(len);
            }
            if(val == 0) break;
        }
    }
}
