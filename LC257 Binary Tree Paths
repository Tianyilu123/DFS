
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> res = new ArrayList<>();
        if(root == null) return res;
        helper(root, new StringBuilder(), res);
        return res;
    }
    
    private void helper(TreeNode root, StringBuilder path, List<String> res) {
        if(root == null) return;
        int len = path.length();
        if(root.left == null && root.right == null) {
            path.append(root.val);
            res.add(path.toString());
        }
        else {
            path.append(root.val + "->");
            helper(root.left, path, res);
            helper(root.right, path, res);
        }
            path.setLength(len);
    }
}


Time: O(n), 
Space: O(n) 
