
class Solution {
    public int numIslands(char[][] grid) {
        if(grid == null || grid.length == 0 || grid[0] == null) return 0;
        int row = grid.length;
        int col = grid[0].length;
        int count = 0;
        for(int i=0; i<row; i++) {
            for(int j=0; j<col; j++) {
                if(grid[i][j] == '1') {
                    count++;
                    dfs(grid, i, j);
                }
            }
        }
        return count;
    }
    
    private void dfs(char[][] grid, int i, int j) {
        int row = grid.length, col = grid[0].length;
        int[][] dirs = {{1,0},{-1,0},{0,1},{0,-1}};
        grid[i][j] = '0';
        for(int[] dir : dirs) {
            int ii = i+dir[0];
            int jj = j+dir[1];
            if(ii>=0 && ii<row && jj>=0 && jj<col && grid[ii][jj] == '1') {
                dfs(grid, ii, jj);
            }
        }
    }
}
